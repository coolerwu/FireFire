# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build release

on:
  push:
    branches: ['0.0.3']
  pull_request:
    branches: [ "master" ]

jobs:
  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: export CI=false
    - run: npm install
    - run: npm run build --if-present
    - name: 读取当前版本号
      id: version
      uses: ashley-taylor/read-json-property-action@v1.0
      with:
        path: ./package.json
        property: version
    - run: npm run package-mac
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: firefire-${{steps.version.outputs.value}}.dmg
        path: ./target/firefire-${{steps.version.outputs.value}}.dmg
  release:
    runs-on: ubuntu-latest
    needs: ['build-mac']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: export CI=false
      - name: 读取当前版本号
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./package.json
          property: version
      - name: create GitHub Release
        id: create_release
        uses: actions/create-release@latest
        env:
          # 配置github token （这个无需去github配置，默认存在的）
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # 标签名
          tag_name: v${{steps.version.outputs.value}}
          # release名
          release_name: v${{steps.version.outputs.value}}
          # 是否为草稿
          draft: false
          # 是否为预发布
          prerelease: false
      - name: Download mac
        uses: actions/download-artifact@v3
        with:
          name: firefire-${{steps.version.outputs.value}}.dmg
      - name: Upload Release mac
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./firefire-${{steps.version.outputs.value}}.dmg
          asset_name: firefire-${{steps.version.outputs.value}}.dmg
          asset_content_type: application/octet-stream